name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Build Docker image
      run: |
        docker build -t my-web-app:latest .

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push Docker image to Amazon ECR
      run: |
        docker tag my-web-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-repo:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-repo:latest

    - name: Deploy to ECS
      run: |
        aws ecs update-service --cluster MyCluster --service my-repo-service --force-new-deployment

    - name: Run Integration Tests
      run: |
        curl -s -o /dev/null -w "%{http_code}" http://3.223.129.49 | grep -q "200"

    - name: Rollback Deployment
      if: failure()
      run: |
        echo "Rolling back deployment due to test failures..."
        aws ecs update-service --cluster MyCluster --service my-repo-service --force-new-deployment